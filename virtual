#!/bin/bash

# Cek apakah sudah root
if [ "$(id -u)" -ne 0 ]; then
  echo "‚ùå Harap jalankan script ini sebagai root (sudo)"
  exit 1
fi

# Fungsi untuk menangani error container
handle_container_error() {
  local container=$1
  
  echo "‚è≥ Mencoba memperbaiki container $container..."
  
  lxc stop $container --force 2>/dev/null
  lxc delete $container --force 2>/dev/null
  lxc delete $container/* --force 2>/dev/null
  lxc image delete ubuntu/20.04 2>/dev/null
  lxc storage delete default --force 2>/dev/null
  lxc storage create default dir source=/var/lib/lxd/storage-pools/default
  
  echo "‚ôªÔ∏è Membuat ulang container $container..."
  lxc launch ubuntu:20.04 $container
}

# ========== [1] INSTALL LXD ==========
echo "[*] Memastikan LXD terinstall..."
if ! command -v lxd &> /dev/null; then
  echo "[*] Install LXD..."
  apt update && apt install -y snapd
  sudo snap install lxd --channel=5.0/stable
else
  echo "‚ÑπÔ∏è LXD sudah terinstall"
fi

# ========== [2] INIT LXD ==========
echo "[*] Inisialisasi LXD..."
if ! lxc storage list | grep -q default; then
  cat <<EOF | lxd init --preseed
config:
  core.https_address: '[::]:8443'
  core.trust_password: "password"
storage_pools:
- name: default
  driver: dir
networks:
- name: lxdbr0
  type: bridge
  config:
    ipv4.address: auto
    ipv6.address: none
profiles:
- name: default
  devices:
    root:
      path: /
      pool: default
      type: disk
    eth0:
      name: eth0
      network: lxdbr0
      type: nic
EOF
else
  echo "‚ÑπÔ∏è Profile default sudah ada"
fi

# ========== [3] SETUP CONTAINER ==========
CONTAINER="legacy-script-env"

echo "[*] Membuat container Ubuntu 20.04 bernama '$CONTAINER'..."
if ! lxc launch ubuntu:20.04 "$CONTAINER"; then
  echo "‚ùå Gagal membuat container, mencoba perbaikan..."
  handle_container_error "$CONTAINER"
fi

echo "[*] Menunggu container aktif..."
sleep 15

if ! lxc list "$CONTAINER" | grep -q RUNNING; then
  echo "‚ö†Ô∏è Container tidak berjalan, mencoba memulai ulang..."
  lxc start "$CONTAINER"
  sleep 10
fi

if ! lxc list "$CONTAINER" | grep -q RUNNING; then
  echo "‚ùå Gagal menjalankan container. Log error:"
  lxc info "$CONTAINER" --show-log
  exit 1
fi

# ========== [4] CONTAINER SETUP ==========
echo "[*] Menyiapkan dependensi di dalam container..."
lxc exec "$CONTAINER" -- bash -c "
  apt update -y && apt upgrade -y
  apt install -y python2 gcc make curl wget unzip zip screen gnupg net-tools iproute2 iptables nginx dropbear cron htop iftop rsyslog bzip2 gzip dos2unix nano vim mc git cmake libreadline-dev zlib1g-dev libssl-dev libsqlite3-dev libxml-parser-perl python3 python3-pip ruby jq bc
" || echo "‚ö†Ô∏è Beberapa paket gagal diinstall, melanjutkan..."

# ========== [5] MENU COMMAND FIX ==========
echo "[*] Membuat shortcut 'menu' yang benar..."
sudo tee /usr/local/bin/menu > /dev/null <<'EOF'
#!/bin/bash
lxc exec legacy-script-env -- bash
EOF
sudo chmod +x /usr/local/bin/menu

# Tambahkan ke .bashrc root
if ! grep -q "alias menu=" /root/.bashrc; then
  echo "alias menu='lxc exec legacy-script-env -- bash'" >> /root/.bashrc
fi

# ========== [6] PORT FORWARDING ==========
echo "[*] Setup port forwarding..."
lxc config device add "$CONTAINER" http proxy listen=tcp:0.0.0.0:80 connect=tcp:127.0.0.1:80
lxc config device add "$CONTAINER" https proxy listen=tcp:0.0.0.0:443 connect=tcp:127.0.0.1:443
lxc config device add "$CONTAINER" ssh proxy listen=tcp:0.0.0.0:22 connect=tcp:127.0.0.1:22

# ========== [7] FINALIZATION ==========
echo ""
echo "‚úÖ INSTALASI BERHASIL!"
echo "‚û°Ô∏è Ketik 'menu' untuk masuk ke container"
echo "üîå Port yang diforward:"
echo "   - HTTP: 80"
echo "   - HTTPS: 443"
echo "   - SSH: 22"
echo ""
echo "üí° Tips:"
echo "1. Untuk akses root di container: lxc exec $CONTAINER -- bash"
echo "2. Cek status container: lxc list"
echo "3. Backup container: lxc export $CONTAINER backup.tar.gz"
