#!/bin/bash

# ==============================================
# SCRIPT INSTALASI CONTAINER LXD - VERSI DEFINITIF
# ==============================================

# Konfigurasi
CONTAINER_NAME="vpn-container"
CONTAINER_IMAGE="ubuntu:20.04"
STORAGE_POOL="default"
STORAGE_SIZE="10GB"

# Fungsi untuk menampilkan pesan
function show_msg() {
    echo -e "\n\033[1;36m>>> $1\033[0m"
}

function show_error() {
    echo -e "\n\033[1;31m!!! $1\033[0m"
}

function show_success() {
    echo -e "\n\033[1;32mâœ“ $1\033[0m"
}

# 1. Verifikasi dan instal LXD
show_msg "1. Memverifikasi instalasi LXD..."
if ! command -v lxd &> /dev/null; then
    show_msg "Menginstall LXD..."
    sudo apt update
    sudo apt install -y lxd lxd-client
    sudo usermod -aG lxd $USER
    newgrp lxd
else
    show_success "LXD sudah terinstall"
fi

# 2. Inisialisasi LXD dengan konfigurasi minimal
show_msg "2. Menginisialisasi LXD..."
cat <<EOF | sudo lxd init --preseed
config:
  core.https_address: '[::]:8443'
  core.trust_password: ""
storage_pools:
- name: ${STORAGE_POOL}
  driver: dir
  config:
    source: /var/lib/lxd/storage-pools/${STORAGE_POOL}
networks:
- name: lxdbr0
  type: bridge
  config:
    ipv4.address: auto
    ipv6.address: none
profiles:
- name: default
  devices:
    root:
      path: /
      pool: ${STORAGE_POOL}
      type: disk
    eth0:
      name: eth0
      network: lxdbr0
      type: nic
EOF

# 3. Verifikasi storage pool
show_msg "3. Memverifikasi storage pool..."
if ! lxc storage list | grep -q ${STORAGE_POOL}; then
    show_msg "Membuat storage pool manual..."
    sudo mkdir -p /var/lib/lxd/storage-pools/${STORAGE_POOL}
    lxc storage create ${STORAGE_POOL} dir source=/var/lib/lxd/storage-pools/${STORAGE_POOL}
    
    if ! lxc storage list | grep -q ${STORAGE_POOL}; then
        show_error "Gagal membuat storage pool"
        show_msg "Coba metode alternatif..."
        sudo rm -rf /var/lib/lxd/storage-pools/${STORAGE_POOL}
        lxc storage create ${STORAGE_POOL} dir size=${STORAGE_SIZE}
    fi
fi

# Verifikasi akhir storage pool
if ! lxc storage list | grep -q ${STORAGE_POOL}; then
    show_error "Gagal membuat storage pool setelah beberapa percobaan"
    show_msg "Silakan coba langkah manual:"
    echo "1. sudo lxd init"
    echo "2. Pilih opsi storage manual"
    echo "3. Buat storage pool dengan nama 'default'"
    exit 1
fi

show_success "Storage pool ${STORAGE_POOL} berhasil dibuat"

# 4. Membuat container
show_msg "4. Membuat container ${CONTAINER_NAME}..."

# Hapus container jika sudah ada
if lxc list | grep -q ${CONTAINER_NAME}; then
    show_msg "Menghapus container yang sudah ada..."
    lxc delete ${CONTAINER_NAME} --force
fi

# Buat container dengan konfigurasi eksplisit
show_msg "Mengunduh image ${CONTAINER_IMAGE}..."
lxc image copy ${CONTAINER_IMAGE} local: --alias ubuntu-focal

show_msg "Membuat container baru..."
lxc init ubuntu-focal ${CONTAINER_NAME} \
    --storage ${STORAGE_POOL} \
    -c security.nesting=true \
    -c security.privileged=true \
    -c limits.memory=2GB \
    -c limits.cpu=2

show_msg "Memulai container..."
lxc start ${CONTAINER_NAME}

# Verifikasi container berjalan
if ! lxc list | grep -q "${CONTAINER_NAME}.*RUNNING"; then
    show_error "Gagal memulai container"
    show_msg "Mencoba metode alternatif launch..."
    lxc launch ${CONTAINER_IMAGE} ${CONTAINER_NAME} \
        --storage ${STORAGE_POOL}
    
    if ! lxc list | grep -q "${CONTAINER_NAME}.*RUNNING"; then
        show_error "Gagal total membuat container"
        show_msg "Diagnosa terakhir:"
        echo "Status LXD:"
        sudo systemctl status lxd --no-pager
        echo "Log terakhir LXD:"
        sudo journalctl -u lxd --no-pager -n 20
        echo "Daftar storage pool:"
        lxc storage list
        exit 1
    fi
fi

show_success "Container ${CONTAINER_NAME} berhasil dibuat dan berjalan"

# [Lanjutkan dengan bagian konfigurasi container dan port forwarding...]
# (Gunakan bagian script sebelumnya untuk setup port forwarding dan menu)

show_msg "Instalasi berhasil diselesaikan!"
echo -e "\nGunakan perintah berikut untuk mengelola container:"
echo -e "1. Masuk container: \033[1;32mlxc exec ${CONTAINER_NAME} -- bash\033[0m"
echo -e "2. Monitor container: \033[1;32mlxc info ${CONTAINER_NAME}\033[0m"
echo -e "3. Stop container: \033[1;32mlxc stop ${CONTAINER_NAME}\033[0m"
echo -e "4. Start container: \033[1;32mlxc start ${CONTAINER_NAME}\033[0m"
