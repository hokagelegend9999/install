#!/bin/bash

# ==============================================
# Script Instalasi Container LXD untuk VPN Services
# Dengan perbaikan masalah storage pool
# ==============================================

# Fungsi untuk menampilkan pesan status
function status_msg() {
    echo -e "\n\033[1;32m>>> $1\033[0m\n"
}

# Fungsi untuk menampilkan pesan error
function error_msg() {
    echo -e "\n\033[1;31m!!! $1\033[0m\n"
}

# 1. Install LXD jika belum terinstall
status_msg "1. Memeriksa dan menginstall LXD..."
if ! command -v lxd &> /dev/null; then
    sudo apt update
    sudo apt install -y lxd
    sudo lxd init --auto --storage-backend=dir --storage-create-loop=10
else
    echo "LXD sudah terinstall, melanjutkan..."
fi

# 2. Konfigurasi Storage Pool
status_msg "2. Memeriksa dan mengkonfigurasi storage pool..."

# Cek apakah storage pool default ada
if ! lxc storage list | grep -q default; then
    status_msg "Membuat storage pool default..."
    lxc storage create default dir
    if [ $? -ne 0 ]; then
        error_msg "Gagal membuat storage pool default. Mencoba alternatif..."
        lxc storage create default dir source=/var/lib/lxd/storage-pools/default
    fi
    
    # Verifikasi storage pool
    if ! lxc storage list | grep -q default; then
        error_msg "Gagal membuat storage pool. Silakan coba:"
        echo "1. lxd init"
        echo "2. Pilih opsi storage manual"
        exit 1
    fi
fi

# 3. Membuat container dengan konfigurasi yang solid
CONTAINER_NAME="vpn-container"
status_msg "3. Membuat container Ubuntu 20.04 ($CONTAINER_NAME)..."

# Hapus container jika sudah ada
if lxc list | grep -q "$CONTAINER_NAME"; then
    status_msg "Menghapus container yang sudah ada..."
    lxc delete "$CONTAINER_NAME" --force
fi

# Buat container dengan konfigurasi lengkap
lxc init ubuntu:20.04 "$CONTAINER_NAME" \
    --storage default \
    -c security.nesting=true \
    -c security.privileged=true \
    -c limits.memory=1GB \
    -c limits.cpu=1

# Mulai container
status_msg "Memulai container..."
lxc start "$CONTAINER_NAME"

# Verifikasi container berjalan
if ! lxc list | grep -q "$CONTAINER_NAME.*RUNNING"; then
    error_msg "Gagal memulai container. Mencoba alternatif..."
    
    # Coba metode alternatif
    lxc launch ubuntu:20.04 "$CONTAINER_NAME" \
        --storage default \
        -c security.nesting=true
    
    if ! lxc list | grep -q "$CONTAINER_NAME"; then
        error_msg "Gagal total membuat container. Diagnosa:"
        echo "1. Cek status LXD: sudo systemctl status lxd"
        echo "2. Cek storage pool: lxc storage list"
        echo "3. Cek log: journalctl -u lxd --no-pager -n 50"
        exit 1
    fi
fi

# 4. Menunggu container siap
status_msg "4. Menunggu container siap..."
sleep 20  # Waktu tunggu lebih lama

# 5. Konfigurasi dasar container
status_msg "5. Konfigurasi dasar container..."
lxc exec "$CONTAINER_NAME" -- bash -c "apt update && DEBIAN_FRONTEND=noninteractive apt upgrade -y"
lxc exec "$CONTAINER_NAME" -- bash -c "DEBIAN_FRONTEND=noninteractive apt install -y wget curl nano iptables net-tools ufw"

# 6. Setup port forwarding
status_msg "6. Setup port forwarding..."

# Daftar port dan protokol
PORTS=(
    "xray-http 80 tcp"
    "xray-ssl 443 tcp"
    "sshws 2222 tcp"
    "dropbear 109 tcp"
    "pptp 1723 tcp"
    "l2tp 1701 udp"
)

# Setup port forwarding
for port_config in "${PORTS[@]}"; do
    read -r name port proto <<< "$port_config"
    status_msg "Setting up $name ($port/$proto)..."
    lxc config device add "$CONTAINER_NAME" "$name" proxy \
        listen="$proto:0.0.0.0:$port" \
        connect="$proto:127.0.0.1:$port"
done

# 7. Konfigurasi network tambahan
status_msg "7. Konfigurasi network container..."
lxc config device set "$CONTAINER_NAME" eth0 security.ipv4_filtering=false
lxc config device set "$CONTAINER_NAME" eth0 security.ipv6_filtering=false

# 8. Membuat direktori untuk script
status_msg "8. Membuat direktori untuk script di container..."
lxc exec "$CONTAINER_NAME" -- mkdir -p /root/vpn-scripts

# 9. Setup fungsi menu di .bashrc
status_msg "9. Setup fungsi menu di .bashrc..."

# Backup .bashrc
[ -f ~/.bashrc ] && cp ~/.bashrc ~/.bashrc.bak

# Tambahkan fungsi menu
cat << EOF >> ~/.bashrc

# ==============================================
# Fungsi untuk container LXD $CONTAINER_NAME
# ==============================================
function menu() {
    if ! command -v lxc &> /dev/null; then
        echo "LXD tidak terinstall!"
        return 1
    fi
    
    # Cek apakah container ada
    if ! lxc list | grep -q "$CONTAINER_NAME"; then
        echo "Container $CONTAINER_NAME tidak ditemukan!"
        return 1
    fi
    
    # Cek status container
    CONTAINER_STATUS=\$(lxc list "$CONTAINER_NAME" -c s --format=csv)
    
    if [ "\$CONTAINER_STATUS" != "RUNNING" ]; then
        echo "Container tidak berjalan, menjalankan container..."
        lxc start "$CONTAINER_NAME"
        sleep 5
    fi
    
    if [ -z "\$LXD_CONTAINER_ACTIVE" ]; then
        echo "Memasuki container $CONTAINER_NAME..."
        export LXD_CONTAINER_ACTIVE=1
        export PS1="(container:$CONTAINER_NAME) \$PS1"
        lxc exec "$CONTAINER_NAME" -- /bin/bash
        unset LXD_CONTAINER_ACTIVE
        export PS1=\${PS1#"(container:$CONTAINER_NAME) "}
    else
        echo "Anda sudah berada dalam container. Ketik 'exit' untuk keluar."
    fi
}

alias masukcontainer='menu'
EOF

# 10. Load .bashrc
source ~/.bashrc

# 11. Informasi final
status_msg "10. Instalasi selesai!"
echo -e "\n\033[1;32mCONTAINER VPN BERHASIL DIBUAT!\033[0m"
echo -e "Container Name: \033[1;34m$CONTAINER_NAME\033[0m"
echo -e "Status Container: \033[1;33m$(lxc list $CONTAINER_NAME -c s --format=csv)\033[0m"

echo -e "\n\033[1;36mPORT FORWARDING YANG AKTIF:\033[0m"
for port_config in "${PORTS[@]}"; do
    read -r name port proto <<< "$port_config"
    echo -e " - $name: $port/$proto"
done

echo -e "\n\033[1;35mPERINTAH PENGGUNAAN:\033[0m"
echo -e "1. Masuk container: \033[1;32mmenu\033[0m atau \033[1;32mmasukcontainer\033[0m"
echo -e "2. Keluar container: \033[1;32mexit\033[0m"
echo -e "3. Transfer file: \033[1;32mlxc file push <file> $CONTAINER_NAME/root/vpn-scripts/\033[0m"
echo -e "4. Monitor resource: \033[1;32mlxc exec $CONTAINER_NAME -- top\033[0m"

echo -e "\n\033[1;33mTROUBLESHOOTING:\033[0m"
echo -e "1. Cek status LXD: \033[1;32msudo systemctl status lxd\033[0m"
echo -e "2. Cek storage pool: \033[1;32mlxc storage list\033[0m"
echo -e "3. Cek log LXD: \033[1;32msudo journalctl -u lxd --no-pager -n 50\033[0m"
echo -e "4. Hapus container: \033[1;32mlxc delete $CONTAINER_NAME --force\033[0m"

echo -e "\n\033[1;32mSISTEM SIAP DIGUNAKAN!\033[0m"
