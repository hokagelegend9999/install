#!/bin/bash

# =============================================
# INSTALLER LXC UBUNTU 20.04 - VERSI PERBAIKAN
# =============================================

function show_msg() {
    echo -e "\n\e[1;34m>>\e[0m \e[1;37m$1\e[0m"
}

function show_error() {
    echo -e "\n\e[1;31mERROR:\e[0m \e[1;37m$1\e[0m"
}

function show_success() {
    echo -e "\e[1;32mâœ“\e[0m $1"
}

# Cek root
if [ "$(id -u)" -ne 0 ]; then
    show_error "Script harus dijalankan sebagai root!"
    exit 1
fi

# 1. Install LXD via Snap jika belum ada
show_msg "1. Menginstall LXD (via snap)..."
if ! command -v lxd &> /dev/null; then
    snap install lxd --channel=latest/stable
    snap refresh lxd
else
    show_success "LXD sudah terinstall"
fi

# Pastikan snapd aktif
systemctl enable --now snapd.socket snapd.service

# 2. Inisialisasi LXD (auto)
show_msg "2. Inisialisasi LXD..."
lxd init --auto

# 3. Setup remote ubuntu-legacy jika belum ada
if ! lxc remote list | grep -q ubuntu-legacy; then
    show_msg "Menambahkan remote ubuntu-legacy..."
    lxc remote add ubuntu-legacy https://cloud-images.ubuntu.com/releases --protocol simplestreams
else
    show_success "Remote ubuntu-legacy sudah ada"
fi

# 4. Hapus container lama jika ada
if lxc list | grep -q "legacy-script-env"; then
    show_msg "Menghapus container lama legacy-script-env..."
    lxc stop legacy-script-env --force
    lxc delete legacy-script-env
fi

# 5. Launch container ubuntu 20.04
show_msg "Membuat container Ubuntu 20.04 legacy-script-env..."
lxc launch ubuntu-legacy:20.04 legacy-script-env

# Tunggu beberapa detik biar container ready
sleep 5

# 6. Update & install paket penting di container
show_msg "Update dan install paket dasar di container..."
lxc exec legacy-script-env -- bash -c "apt update && apt upgrade -y"
lxc exec legacy-script-env -- bash -c "apt install -y sudo curl wget nano"

# 7. Buat user baru 'scriptuser' dengan password 'password'
show_msg "Membuat user baru 'scriptuser'..."
lxc exec legacy-script-env -- bash -c "useradd -m -s /bin/bash scriptuser && echo 'scriptuser:password' | chpasswd"
lxc exec legacy-script-env -- bash -c "usermod -aG sudo scriptuser"

# 8. Tambah alias ke /root/.bashrc jika belum ada
show_msg "Menambahkan alias LXC ke /root/.bashrc..."
if ! grep -q "alias virtual=" /root/.bashrc; then
    cat <<EOF >> /root/.bashrc

# LXC Aliases
alias virtual='lxc exec legacy-script-env -- bash'
alias lxc-user='lxc exec legacy-script-env -- sudo -u scriptuser -i'
alias lxc-stop='lxc stop legacy-script-env'
alias lxc-start='lxc start legacy-script-env'
alias lxc-list='lxc list'
EOF
    show_success "Alias berhasil ditambahkan. Jangan lupa jalankan: source /root/.bashrc"
else
    show_success "Alias sudah ada di /root/.bashrc"
fi

# 9. Selesai
show_msg "Instalasi selesai!"

echo -e "\n\e[1;32mPERINTAH PENTING:\e[0m"
echo -e "  \e[1;36mvirtual\e[0m    - Masuk ke container sebagai root"
echo -e "  \e[1;36mlxc-user\e[0m    - Masuk ke container sebagai user 'scriptuser'"
echo -e "  \e[1;36mlxc-stop\e[0m    - Stop container"
echo -e "  \e[1;36mlxc-start\e[0m   - Start container"
echo -e "  \e[1;36mlxc-list\e[0m    - List container"

echo -e "\n\e[1;33mJika alias belum aktif, jalankan:\e[0m"
echo -e "  \e[1;36msource /root/.bashrc\e[0m"

# 10. Tanya masuk ke container sekarang
read -p $'\nMasuk ke container sekarang? (y/n) ' -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    lxc exec legacy-script-env -- bash
fi
